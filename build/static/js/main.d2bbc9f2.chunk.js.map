{"version":3,"sources":["components/Chatroom.js","containers/MainContainer.js","actions/action.js","containers/SetterContainer.js","reducer/reducer.js","index.js","config/firebaseConfig.js"],"names":["Chatroom","props","_isMounted","state","logout","bind","submitData","handleChange","onEnterPress","thisComponent","this","firebase","firestore","collection","orderBy","onSnapshot","resultData","docs","forEach","log","push","setState","refs","chatroomContent","scrollTop","scrollHeight","error","console","event","preventDefault","db","submitContent","name","add","Date","toISOString","setName","auth","signOut","e","keyCode","shiftKey","submitBtn","click","stateName","currentTarget","getAttribute","value","chatLogs","charCodeAt","ChatroomContainer","animationIn","animationInDelay","animationOut","isVisible","length","ChatroomHeader","onClick","ChatroomContent","ref","map","data","index","key","Name","Content","LogTimeText","CreateTime","toLocaleTimeString","hour","minute","ChatroomInput","onSubmit","onKeyDown","onChange","type","Component","styled","div","span","MainContainer","login","saveNameToStore","onAuthStateChanged","user","currentUser","displayName","userName","account","password","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","catch","message","reg_account","reg_password","reg_userName","createUserWithEmailAndPassword","updateProfile","isReg","errorMsg","isRegister","Container","InputNameDiv","InputNameAnimated","className","register","animationInDuration","switchToRegister","animationOutDuration","Animated","SETNAME","connect","setter","dispatch","initVal","setterAPP","combineReducers","action","store","createStore","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","SetterContainer","document","getElementById"],"mappings":"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","file":"static/js/main.d2bbc9f2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport firebase from 'firebase';\r\nimport styled from 'styled-components'\r\nimport {Animated} from \"react-animated-css\";\r\n\r\nexport default class Chatroom extends Component {\r\n    _isMounted = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        \"chatLogs\":[],\r\n        \"submitContent\":\"\",\r\n        \"colorList\":[\"#ff5e00\",\"#53b800\",\"#045ba1\",\"#3403bb\",\"#3403bb\",\"#960075\",\"#790028\",\"#bd0000\",\"#0383a3\",\"#c08300\"]\r\n      };\r\n      this.logout = this.logout.bind(this);\r\n      this.submitData = this.submitData.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.onEnterPress = this.onEnterPress.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n      const thisComponent = this;\r\n      firebase.firestore().collection(\"ChatroomLogs\").orderBy(\"CreateTime\",\"asc\").onSnapshot({\r\n        // 監聽ChatroomLogs變化\r\n      }, (collection) => {\r\n        const resultData = [];\r\n        collection.docs.forEach((log) => {\r\n          resultData.push({log});\r\n        });\r\n        if(thisComponent._isMounted){\r\n          thisComponent.setState({\r\n            'chatLogs': resultData\r\n          });\r\n          this.refs.chatroomContent.scrollTop = this.refs.chatroomContent.scrollHeight;\r\n        }\r\n      },(error) => {\r\n        console.log(\"firestore onSnapshot error\",error);\r\n      });\r\n    }\r\n\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      this._isMounted = false\r\n    }\r\n\r\n    submitData(event){\r\n      event.preventDefault();\r\n      const db = firebase.firestore();\r\n      const {submitContent} = this.state;\r\n      const {name} = this.props;\r\n      this.setState({\r\n        \"submitContent\":\"\"\r\n      });\r\n      db.collection(\"ChatroomLogs\").add({\r\n          \"Name\":name,\r\n          \"Content\":submitContent,\r\n          \"CreateTime\":new Date().toISOString()\r\n      });\r\n    }\r\n\r\n    logout(){\r\n      this.props.setName(\"\");\r\n      firebase.auth().signOut();\r\n    }\r\n\r\n    onEnterPress(e){\r\n      if(e.keyCode === 13 && e.shiftKey === false) {\r\n        e.preventDefault();\r\n        this.refs.submitBtn.click();\r\n      }\r\n    }\r\n\r\n    handleChange(e){\r\n      let stateName = e.currentTarget.getAttribute(\"name\");\r\n      let value = e.currentTarget.value;\r\n      this.setState({\r\n        [stateName]:value\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const {chatLogs,submitContent} = this.state;\r\n      const {name} = this.props;\r\n      console.log(name.charCodeAt())\r\n        return (\r\n          <ChatroomContainer>\r\n            <Animated animationIn=\"bounceInDown\" animationInDelay={500} animationOut=\"fadeOut\" isVisible={name.length>0}>\r\n              <ChatroomHeader>\r\n                <span>聊天室-{name}</span>\r\n                <button onClick={this.logout}>X</button>\r\n              </ChatroomHeader>\r\n              <ChatroomContent ref=\"chatroomContent\">\r\n                <div>\r\n                {\r\n                  chatLogs.map((data,index)=>{\r\n                    return(\r\n                      <Animated animationIn=\"fadeIn\" isVisible={true} key={index}>\r\n                        <div>\r\n                          <span>{data.log.data().Name}</span>: {data.log.data().Content}\r\n                          <LogTimeText>{new Date(data.log.data().CreateTime).toLocaleTimeString([],{hour: '2-digit', minute: '2-digit'})}</LogTimeText>\r\n                        </div>\r\n                      </Animated>\r\n                    );\r\n                  })\r\n                }\r\n                </div>\r\n              </ChatroomContent>\r\n              <ChatroomInput>\r\n                <div>\r\n                  <form onSubmit={(e)=>this.submitData(e)}>\r\n                    <textarea name=\"submitContent\" onKeyDown={(e)=>this.onEnterPress(e)} \r\n                              onChange={(e)=>this.handleChange(e)} value={submitContent}/>\r\n                    <input type=\"submit\" value=\"送出\" ref=\"submitBtn\"/>\r\n                  </form>\r\n                </div>\r\n              </ChatroomInput>\r\n            </Animated>\r\n          </ChatroomContainer>\r\n        )\r\n    }\r\n}\r\nconst ChatroomContainer = styled.div`\r\n  width:80%;\r\n  display:flex;\r\n  position:absolute;\r\n  top:40%;\r\n  left:50%;\r\n  transform:translate(-50%, -50%);\r\n  -ms-transform:translate(-50%, -50%);\r\n  -moz-transform:translate(-50%, -50%);\r\n  -webkit-transform:translate(-50%, -50%);\r\n  -o-transform:translate(-50%, -50%);\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n  &>div{\r\n    width:100%;\r\n  }\r\n`;\r\nconst ChatroomHeader = styled.div`\r\n  display:flex;\r\n  justify-content:space-between;\r\n  align-items:center;\r\n  background-color: rgb(235, 232, 232);\r\n  padding:8px;\r\n  border-top-left-radius:8px;\r\n  border-top-right-radius:8px;\r\n`;\r\nconst ChatroomContent = styled.div`\r\n  width:100%;\r\n  max-height:20rem;\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:flex-start;\r\n  align-items:flex-start;\r\n  background-color:white;\r\n  overflow-y:auto;\r\n  &::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n    border-radius: 10px;\r\n    background-color: #F5F5F5;\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n    background-color: #F5F5F5;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n    background-color: #555;\r\n  }\r\n  &>div{\r\n    padding:0.5rem\r\n  }\r\n  span{\r\n    font-weight:bold;\r\n  }\r\n`;\r\nconst ChatroomInput = styled.div`\r\n  width:100%;\r\n  height:8rem;\r\n  overflow:hidden auto;\r\n  form{\r\n    display:flex;\r\n    input[type=\"submit\"]{\r\n      border:0.2px solid rgb(169, 169, 169);\r\n      flex-basis:15%;\r\n      font-weight:bold;\r\n      font-family: LiHeiPro,Microsoft JhengHei;\r\n      background-color: rgb(235, 232, 232);\r\n      cursor: pointer;\r\n      &:hover{\r\n        background-color: rgb(177, 177, 177);\r\n      }\r\n    }\r\n  }\r\n  textarea{\r\n    width:100%;\r\n    height:4rem;\r\n    resize:none;\r\n    padding:0;\r\n    margin:0;\r\n    padding:0.5rem\r\n  }\r\n`;\r\nconst LogTimeText = styled.span`\r\n  font-size:8px;\r\n  margin-left:0.5rem;\r\n`;","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport firebase from 'firebase';\nimport {Animated} from \"react-animated-css\";\n\nimport Chatroom from '../components/Chatroom';\n\nexport default class MainContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      \"account\":\"\",\n      \"password\":\"\",\n      \"errorMsg\":\"\",\n      \"reg_userName\":\"\",\n      \"reg_account\":\"\",\n      \"reg_password\":\"\",\n      \"isRegister\":false\n    };\n    this.login = this.login.bind(this);\n    this.saveNameToStore = this.saveNameToStore.bind(this);\n  }\n\n  componentWillMount(){\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n          this.props.setName(firebase.auth().currentUser.displayName);\n      } else {\n        console.log(\"not login\");\n      }\n    });\n  }\n\n  saveNameToStore(userName){\n    this.props.setName(userName);\n    return false;\n  }\n\n  login(event){\n    event.preventDefault();\n    const {account,password} = this.state;\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(()=>{\n      firebase.auth().signInWithEmailAndPassword(account,password).then(() => {\n        const currentUser = firebase.auth().currentUser;\n        if(currentUser !== null){\n          this.saveNameToStore(currentUser.displayName);\n          this.setState({\n            \"errorMsg\":\"\"\n          });\n        }\n      }).catch(error=>{\n        console.log(error)\n        this.setState({\n          \"errorMsg\":error.message||\"登入失敗！\"\n        })\n      });\n    })\n  }\n\n  register(event){\n    event.preventDefault();\n    const {reg_account,reg_password,reg_userName} = this.state;\n    firebase.auth().createUserWithEmailAndPassword(reg_account,reg_password).then(()=>{\n      const currentUser = firebase.auth().currentUser;\n      if(currentUser !== null){\n        currentUser.updateProfile({\n          \"displayName\":reg_userName\n        }).then(()=>{\n          this.saveNameToStore(reg_userName);\n          this.setState({\n            \"errorMsg\":\"\",\n            \"isRegister\":false,\n            \"reg_userName\":\"\",\n            \"reg_account\":\"\",\n            \"reg_password\":\"\",\n          })\n        })\n      }\n    }).catch(error=>{\n      this.setState({\n        \"errorMsg\":error.message||\"註冊失敗！\"\n      })\n    })\n  }\n\n  handleChange(e){\n    let stateName = e.currentTarget.getAttribute(\"name\");\n    let value = e.currentTarget.value;\n    this.setState({\n      [stateName]:value\n    });\n  }\n\n  switchToRegister(isReg){\n    this.setState({\n      \"error\":\"\",\n      \"isRegister\":isReg\n    })\n  }\n\n  render() {\n    const {account,password,errorMsg,isRegister,reg_account,reg_password,reg_userName} = this.state;\n    const {name,setName} = this.props;\n    console.log(name)\n    return (\n      <Container>\n        <InputNameDiv>\n            {\n              !isRegister?\n              <InputNameAnimated animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" animationOutDuration={300} isVisible={!name.length>0}>\n                <form onSubmit={(e) => this.login(e)}>\n                  <Animated className=\"errorMsg\" animationIn=\"shake\" animationOut=\"fadeOut\" animationInDuration={200} isVisible={errorMsg.length>0}>\n                    {errorMsg}\n                  </Animated>\n                  <div>\n                    <span>帳號：</span>\n                    <input type=\"text\" name=\"account\" value={account} onChange={(e)=>this.handleChange(e)}/>\n                  </div>\n                  <div>\n                    <span>密碼：</span>\n                    <input type=\"password\" name=\"password\" value={password} onChange={(e)=>this.handleChange(e)}/>\n                  </div>\n                  <div><input type=\"submit\" value=\"登入\"/></div>\n                  <div>還沒有帳號嗎？<span onClick={()=>this.switchToRegister(true)} className=\"regText\">點此註冊</span></div>\n                </form>\n              </InputNameAnimated>\n                :\n                <div>\n                  <InputNameAnimated className=\"registerDiv\" animationIn=\"bounceInLeft\" isVisible={true}>\n                    <form onSubmit={(e) => this.register(e)}>\n                      <Animated className=\"errorMsg\" animationIn=\"shake\" animationOut=\"fadeOut\" animationInDuration={200} isVisible={errorMsg.length>0}>\n                        {errorMsg}\n                      </Animated>\n                      <div>\n                        <span>暱稱：</span>\n                        <input type=\"text\" name=\"reg_userName\" value={reg_userName} onChange={(e)=>this.handleChange(e)}/>\n                      </div>\n                      <div>\n                        <span>帳號：</span>\n                        <input type=\"text\" name=\"reg_account\" value={reg_account} onChange={(e)=>this.handleChange(e)}/>\n                      </div>\n                      <div>\n                        <span>密碼：</span>\n                        <input type=\"password\" name=\"reg_password\" value={reg_password} onChange={(e)=>this.handleChange(e)}/>\n                      </div>\n                      <div>\n                        <input type=\"submit\" value=\"註冊並登入\"/>\n                        <input type=\"button\" value=\"返回\" onClick={()=>this.switchToRegister(false)}/>\n                      </div>\n                    </form>\n                  </InputNameAnimated>\n              </div>\n            }\n        </InputNameDiv>\n        {\n          name && <Chatroom name={name} setName={setName}/>\n        }\n      </Container>\n    )\n  }\n}\nconst Container = styled.div`\n  width:100%;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n`;\nconst InputNameDiv = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  -moz-transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n  -o-transform: translate(-50%, -50%);\n`;\nconst InputNameAnimated = styled(Animated)`\n  display:flex;\n  flex-direction:row;\n  color:white;\n  div{\n    text-align:center;\n    margin-top:1rem;\n    input[type=\"submit\"],input[type=\"button\"]{\n      width:120px;\n      padding:0.4rem 0;\n      border:none;\n      border-radius:5px;\n      background-color: rgb(235, 232, 232);\n      cursor: pointer;\n      &:hover{\n        background-color: rgb(177, 177, 177);\n      }\n    }\n  }\n  &.registerDiv{\n    input[type=\"submit\"],input[type=\"button\"]{\n      width:8rem;\n      padding:0.4rem 0;\n      margin:0.5rem;\n    }\n  }\n  .errorMsg{\n    color:red;\n  }\n  .regText{\n    text-decoration:underline;\n    cursor: pointer;\n  }\n`;","//action type\r\nexport const SETNAME = \"SETNAME\";\r\n\r\nexport function setName(name){\r\n    return {\r\n        type: SETNAME, //與上方action type綁在一起，方便管理\r\n        name:name\r\n    };\r\n}","import { connect } from 'react-redux';\r\n\r\nimport MainContainer from './MainContainer';\r\nimport {setName} from '../actions/action';\r\n\r\n// 傳遞state至props\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        name: state.setter.name\r\n        // setter 為 reducer 的名字 (reducer是state tree的分支點)\r\n        // Key值的 Name 就是接收 props 的名稱\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        setName: (name) => {dispatch(setName(name))}\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainContainer);","import { combineReducers } from 'redux';\r\nimport { SETNAME } from '../actions/action';\r\n\r\n//建立預設值\r\nconst initVal = {\r\n    name: \"\"\r\n}\r\n\r\nfunction setter(state = initVal, action){\r\n    // console.log(\"state\",state);\r\n    // console.log(\"action\",action);\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n        case SETNAME:\r\n            return { ...state, name:action.name}; //將action.val取代原state的val\r\n    }\r\n}\r\n\r\nconst setterAPP = combineReducers({\r\n    setter\r\n}); //用combineReducers來打包，若有多的reducer就可用物件的形式放進去\r\n\r\nexport default setterAPP;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SetterContainer from './containers/SetterContainer';\nimport firebase from 'firebase';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\n\nimport setterAPP from './reducer/reducer';\nimport {firebaseConfig} from './config/firebaseConfig';\nimport './assets/style/index.css';\nimport './assets/style/animate.css';\n\nlet store = createStore(setterAPP);\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <Provider store={store}>\n        <SetterContainer />\n    </Provider>\n, document.getElementById('root'));\n\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCwwRAzQryiTZm3RacMuIuguNZvpRxsOSk\",\r\n    authDomain: \"mytestproject-5e25f.firebaseapp.com\",\r\n    databaseURL: \"https://mytestproject-5e25f.firebaseio.com\",\r\n    projectId: \"mytestproject-5e25f\",\r\n    storageBucket: \"mytestproject-5e25f.appspot.com\",\r\n    messagingSenderId: \"916908850775\",\r\n    appId: \"1:916908850775:web:aecabcba0493933ec82d12\",\r\n    measurementId: \"G-3FCH0ZS44K\"\r\n};"],"sourceRoot":""}